{
  "stats": {
    "suites": 29,
    "tests": 40,
    "passes": 38,
    "pending": 0,
    "failures": 2,
    "start": "2023-05-10T16:08:27.728Z",
    "end": "2023-05-10T16:08:29.083Z",
    "duration": 1355,
    "testsRegistered": 40,
    "passPercent": 95,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "565a2341-56c8-41b4-8f4f-cc9741afd6c3",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3e7d4887-970c-45fd-a783-28397142bc32",
          "title": "Array",
          "fullFile": "E:\\CodePlace\\university_of_auckland\\compsci_732\\workspace\\group_project\\project-group-azure-aardvarks\\MusicPlus\\server\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "24f76f4a-82ba-4e8a-ae3d-3cc509fc4647",
              "title": "success test",
              "fullFile": "E:\\CodePlace\\university_of_auckland\\compsci_732\\workspace\\group_project\\project-group-azure-aardvarks\\MusicPlus\\server\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return -1 when the value is not present",
                  "fullTitle": "Array success test should return -1 when the value is not present",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert.equal([1,2,3].indexOf(4), -1);",
                  "err": {},
                  "uuid": "6b01a221-5ea4-44d0-bd3d-c7777d193690",
                  "parentUUID": "24f76f4a-82ba-4e8a-ae3d-3cc509fc4647",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6b01a221-5ea4-44d0-bd3d-c7777d193690"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "1c2dc059-c142-4094-a937-911f6165a4b6",
              "title": "failure test",
              "fullFile": "E:\\CodePlace\\university_of_auckland\\compsci_732\\workspace\\group_project\\project-group-azure-aardvarks\\MusicPlus\\server\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return 0 when the value is not present",
                  "fullTitle": "Array failure test should return 0 when the value is not present",
                  "timedOut": false,
                  "duration": 2,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "assert.equal([1, 2, 3].indexOf(1), 1);",
                  "err": {
                    "message": "AssertionError: 0 == 1",
                    "estack": "AssertionError [ERR_ASSERTION] [ERR_ASSERTION]: 0 == 1\n    at Context.<anonymous> (file:///E:/CodePlace/university_of_auckland/compsci_732/workspace/group_project/project-group-azure-aardvarks/MusicPlus/server/test/test.js:11:20)\n    at processImmediate (node:internal/timers:476:21)",
                    "diff": "- 0\n+ 1\n"
                  },
                  "uuid": "1f6f08b9-14f0-4f95-a954-dea35cacfc78",
                  "parentUUID": "1c2dc059-c142-4094-a937-911f6165a4b6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "1f6f08b9-14f0-4f95-a954-dea35cacfc78"
              ],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "86f88f29-a02d-45f1-9938-0d31faade2ba",
          "title": "GET /api/album/:id",
          "fullFile": "E:\\CodePlace\\university_of_auckland\\compsci_732\\workspace\\group_project\\project-group-azure-aardvarks\\MusicPlus\\server\\test\\unit\\api\\album.js",
          "file": "\\test\\unit\\api\\album.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "success",
              "fullTitle": "GET /api/album/:id success",
              "timedOut": false,
              "duration": 33,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const id = 150127127\nchai.request(url)\n    .get(`/api/album/${id}`)\n    .end(function(err, res) {\n        if (err){\n            console.log(err)\n            done()\n        }\n        expect(res.status).to.equal(200);\n        expect(res.body).to.have.deep.property('code', 200);\n        expect(res.body).to.have.deep.property('status', 1);\n        expect(res.body.data.album).to.have.deep.property('id');\n        expect(res.body.data.album).to.have.deep.property('name');\n        expect(res.body.data.album).to.have.deep.property('picUrl');\n        expect(res.body.data.album).to.have.deep.property('size');\n        expect(res.body.data.album).to.have.deep.property('artist');\n        expect(res.body.data.album.artist).to.have.deep.property('name');\n        expect(res.body.data.album.artist).to.have.deep.property('id');\n        expect(res.body.data.album.artist).to.have.deep.property('picUrl');\n        expect(res.body.data.songs).to.be.an('array');\n        res.body.data.songs.forEach(item => {\n            expect(item).to.have.property('name');\n            expect(item).to.have.property('id');\n            expect(item).to.have.property('artists');\n            expect(item.artists).to.be.an('array');\n            item.artists.forEach(artist => {\n                expect(artist).to.have.property('name');\n                expect(artist).to.have.property('id');\n            })\n        })\n        done()\n    })",
              "err": {},
              "uuid": "b3710ee2-7711-4ddb-b074-2ef72058464b",
              "parentUUID": "86f88f29-a02d-45f1-9938-0d31faade2ba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b3710ee2-7711-4ddb-b074-2ef72058464b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 33,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c627beee-a4c1-4efa-b99d-73e822d37ae0",
          "title": "GET /api/music/play/:id",
          "fullFile": "E:\\CodePlace\\university_of_auckland\\compsci_732\\workspace\\group_project\\project-group-azure-aardvarks\\MusicPlus\\server\\test\\unit\\api\\music.js",
          "file": "\\test\\unit\\api\\music.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "success",
              "fullTitle": "GET /api/music/play/:id success",
              "timedOut": false,
              "duration": 161,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/api/music/play/1974443814')\n    .end(function(err, res) {\n        if (err) {\n            console.log(err)\n        }\n        expect(res.status).to.equal(200);\n        done();\n    });",
              "err": {},
              "uuid": "4c2b3aa7-4c27-4942-ad45-ffcaed4f3c3a",
              "parentUUID": "c627beee-a4c1-4efa-b99d-73e822d37ae0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4c2b3aa7-4c27-4942-ad45-ffcaed4f3c3a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 161,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e0223c0a-0e76-4209-b9ef-b09c2681a584",
          "title": "GET /api/music/image/:id",
          "fullFile": "E:\\CodePlace\\university_of_auckland\\compsci_732\\workspace\\group_project\\project-group-azure-aardvarks\\MusicPlus\\server\\test\\unit\\api\\music.js",
          "file": "\\test\\unit\\api\\music.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "success",
              "fullTitle": "GET /api/music/image/:id success",
              "timedOut": false,
              "duration": 921,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/api/music/image/1974443814')\n    .end(function(err, res) {\n        if (err) {\n            console.log(err)\n        }\n        expect(res.status).to.equal(200);\n        done();\n    });",
              "err": {},
              "uuid": "f594dadb-9291-4267-9bbe-9f8eb8026c50",
              "parentUUID": "e0223c0a-0e76-4209-b9ef-b09c2681a584",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f594dadb-9291-4267-9bbe-9f8eb8026c50"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 921,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c640b9fb-447c-404f-b8b4-81c4ca520d75",
          "title": "GET /api/music/lyric/:id",
          "fullFile": "E:\\CodePlace\\university_of_auckland\\compsci_732\\workspace\\group_project\\project-group-azure-aardvarks\\MusicPlus\\server\\test\\unit\\api\\music.js",
          "file": "\\test\\unit\\api\\music.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "success",
              "fullTitle": "GET /api/music/lyric/:id success",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/api/music/lyric/1974443814')\n    .end(function(err, res) {\n        if (err) {\n            console.log(err)\n        }\n        expect(res.status).to.equal(200);\n        expect(res.body).to.have.deep.property('code', 200);\n        expect(res.body).to.have.deep.property('status', 1);\n        expect(res.body).to.have.deep.property('data');\n        done();\n    });",
              "err": {},
              "uuid": "27e1712b-e1d9-41de-852e-edcca3ab90e0",
              "parentUUID": "c640b9fb-447c-404f-b8b4-81c4ca520d75",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "27e1712b-e1d9-41de-852e-edcca3ab90e0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "84b4132d-1734-4dbf-8e77-43267c27412d",
          "title": "GET /api/music/detail/:id",
          "fullFile": "E:\\CodePlace\\university_of_auckland\\compsci_732\\workspace\\group_project\\project-group-azure-aardvarks\\MusicPlus\\server\\test\\unit\\api\\music.js",
          "file": "\\test\\unit\\api\\music.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "success",
              "fullTitle": "GET /api/music/detail/:id success",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/api/music/detail/1974443814')\n    .timeout(10000)\n    .end(function(err, res) {\n        if (err) {\n            console.log(err)\n        }\n        expect(res.status).to.equal(200);\n        expect(res.body).to.have.deep.property('code', 200);\n        expect(res.body).to.have.deep.property('status', 1);\n        expect(res.body).to.have.deep.property('data');\n        expect(res.body.data).to.have.deep.property('name');\n        expect(res.body.data).to.have.deep.property('singer');\n        expect(res.body.data.singer).to.be.an('array');\n        res.body.data.singer.forEach((singer) => {\n            expect(singer).to.have.deep.property('name');\n            expect(singer).to.have.deep.property('id');\n            expect(singer).to.have.deep.property('tns');\n            expect(singer).to.have.deep.property('alias');\n        })\n        expect(res.body.data).to.have.deep.property('album');\n        expect(res.body.data.album).to.have.deep.property('id');\n        expect(res.body.data.album).to.have.deep.property('name');\n        expect(res.body.data.album).to.have.deep.property('picUrl');\n        expect(res.body.data.album).to.have.deep.property('tns');\n        expect(res.body.data.album.tns).to.be.an('array');\n        expect(res.body.data.album).to.have.deep.property('pic_str');\n        expect(res.body.data.album).to.have.deep.property('pic');\n    });",
              "err": {},
              "uuid": "723509c6-39d0-4c57-87d9-44acdbb96ac3",
              "parentUUID": "84b4132d-1734-4dbf-8e77-43267c27412d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "723509c6-39d0-4c57-87d9-44acdbb96ac3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c31aeaab-40f2-489d-b5c6-eff7e6b1c3b3",
          "title": "GET /search/search/:id/:pagenum/:pagesize",
          "fullFile": "E:\\CodePlace\\university_of_auckland\\compsci_732\\workspace\\group_project\\project-group-azure-aardvarks\\MusicPlus\\server\\test\\unit\\api\\search.js",
          "file": "\\test\\unit\\api\\search.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "success",
              "fullTitle": "GET /search/search/:id/:pagenum/:pagesize success",
              "timedOut": false,
              "duration": 18,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const keyword = \"linken_park\"\nconst pagenum = 0\nconst pagesize = 10\nchai.request(url)\n    .get(`/api/search/search/${keyword}/${pagenum}/${pagesize}`)\n    .end(function(err, res) {\n        if(err){\n            console.log(err)\n            done();\n        }\n        expect(res.status).to.equal(200);\n        expect(res.body).to.have.deep.property('code', 200);\n        expect(res.body).to.have.deep.property('status', 1);\n        expect(res.body.data).to.have.deep.property('song');\n        expect(res.body.data.song).to.be.an('array');\n        res.body.data.song.forEach((item) => {\n            expect(item).to.have.property('id');\n            expect(item).to.have.property('name');\n            expect(item).to.have.property('artists');\n            expect(item.artists).to.be.an('array');\n            item.artists.forEach((artist) => {\n                expect(artist).to.have.property('id');\n                expect(artist).to.have.property('name');\n            })\n        })\n        expect(res.body.data).to.have.property('singer');\n        expect(res.body.data.singer).to.be.an('array');\n        res.body.data.singer.forEach((item) => {\n            expect(item).to.have.property('id');\n            expect(item).to.have.property('name');\n            expect(item).to.have.property('picUrl');\n        })\n        expect(res.body.data).to.have.property('album');\n        expect(res.body.data.album).to.be.an('array');\n        res.body.data.album.forEach((item) => {\n            expect(item).to.have.property('id');\n            expect(item).to.have.property('name');\n            expect(item).to.have.property('picUrl');\n            expect(item).to.have.property('artist');\n            expect(item.artist).to.have.property('id');\n            expect(item.artist).to.have.property('name');\n            expect(item).to.have.property('picUrl');\n        })\n        done()\n    })",
              "err": {},
              "uuid": "c3699e4e-0a08-4cd8-8bef-fd664685c36a",
              "parentUUID": "c31aeaab-40f2-489d-b5c6-eff7e6b1c3b3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c3699e4e-0a08-4cd8-8bef-fd664685c36a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9007d111-889e-40b9-b70a-9b61d0ea9643",
          "title": "GET /search/similarSongs/:id",
          "fullFile": "E:\\CodePlace\\university_of_auckland\\compsci_732\\workspace\\group_project\\project-group-azure-aardvarks\\MusicPlus\\server\\test\\unit\\api\\search.js",
          "file": "\\test\\unit\\api\\search.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "success",
              "fullTitle": "GET /search/similarSongs/:id success",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const id = 1974443814\nchai.request(url)\n    .get(`/api/search/similarSongs/${id}`)\n    .end(function(err, res) {\n        if(err){\n            console.log(err)\n            done();\n        }\n        expect(res.status).to.equal(200);\n        expect(res.body).to.have.deep.property('code', 200);\n        expect(res.body).to.have.deep.property('status', 1);\n        expect(res.body.data).to.have.property('song');\n        expect(res.body.data.song).to.be.an('array');\n        res.body.data.song.forEach((item) => {\n            expect(item).to.have.property('id');\n            expect(item).to.have.property('name');\n            expect(item).to.have.property('artists');\n            expect(item).to.have.property('picUrl');\n            expect(item.artists).to.be.an('array');\n            item.artists.forEach((artist) => {\n                expect(artist).to.have.property('id');\n                expect(artist).to.have.property('name');\n            })\n            expect(item).to.have.property('album');\n            expect(item.album).to.have.property('id');\n            expect(item.album).to.have.property('name');\n        })\n        done()\n    })",
              "err": {},
              "uuid": "4862b7b9-e542-49cf-b8b1-eab482b2b980",
              "parentUUID": "9007d111-889e-40b9-b70a-9b61d0ea9643",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4862b7b9-e542-49cf-b8b1-eab482b2b980"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7d62702c-032d-4dfc-9106-49348bc7735b",
          "title": "GET /api/search",
          "fullFile": "E:\\CodePlace\\university_of_auckland\\compsci_732\\workspace\\group_project\\project-group-azure-aardvarks\\MusicPlus\\server\\test\\unit\\api\\search.js",
          "file": "\\test\\unit\\api\\search.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "success",
              "fullTitle": "GET /api/search success",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const keyword = \"linken_park\"\nchai.request(url)\n    .get(`/api/search/`)\n    .send({keyword: keyword})\n    .timeout(5000)\n    .end(function(err, res) {\n        if(err){\n            console.log(err)\n        }\n        expect(res.status).to.equal(200);\n        expect(res.body).to.have.deep.property('code', 200);\n        expect(res.body).to.have.deep.property('status', 1);\n        expect(res.body.data).to.have.deep.property('song');\n        expect(res.body.data.song).to.be.an('array');\n        res.body.data.song.forEach((item) => {\n            expect(item).to.have.property('id');\n            expect(item).to.have.property('name');\n            expect(item).to.have.property('artists');\n            expect(item.artists).to.be.an('array');\n            item.artists.forEach((artist) => {\n                expect(artist).to.have.property('id');\n                expect(artist).to.have.property('name');\n            })\n        })\n        expect(res.body.data).to.have.property('singer');\n        expect(res.body.data.singer).to.be.an('array');\n        res.body.data.singer.forEach((item) => {\n            expect(item).to.have.property('id');\n            expect(item).to.have.property('name');\n            expect(item).to.have.property('picUrl');\n        })\n        expect(res.body.data).to.have.property('album');\n        expect(res.body.data.album).to.be.an('array');\n        res.body.data.album.forEach((item) => {\n            expect(item).to.have.property('id');\n            expect(item).to.have.property('name');\n            expect(item).to.have.property('picUrl');\n            expect(item).to.have.property('artist');\n            expect(item.artist).to.have.property('id');\n            expect(item.artist).to.have.property('name');\n            expect(item).to.have.property('picUrl');\n        })\n    })",
              "err": {},
              "uuid": "72386d0e-570d-4643-bc3f-46cae571eeb4",
              "parentUUID": "7d62702c-032d-4dfc-9106-49348bc7735b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "72386d0e-570d-4643-bc3f-46cae571eeb4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5e49dd6e-4161-4c7a-83d2-f392143f7d62",
          "title": "GET /api/singer/detail/:id",
          "fullFile": "E:\\CodePlace\\university_of_auckland\\compsci_732\\workspace\\group_project\\project-group-azure-aardvarks\\MusicPlus\\server\\test\\unit\\api\\singer.js",
          "file": "\\test\\unit\\api\\singer.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "success",
              "fullTitle": "GET /api/singer/detail/:id success",
              "timedOut": false,
              "duration": 28,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const id = 6452\nchai.request(url)\n    .get(`/api/singer/detail/${id}`)\n    .end(function(err, res) {\n        if(err){\n            console.log(err)\n            done();\n        }\n        expect(res.status).to.equal(200);\n        expect(res.body).to.have.deep.property('code', 200);\n        expect(res.body).to.have.deep.property('status', 1);\n        expect(res.body.data).to.have.deep.property('id', id);\n        expect(res.body.data).to.have.deep.property('name');\n        expect(res.body.data).to.have.property('image');\n        expect(res.body.data).to.have.property('musicSize');\n        expect(res.body.data).to.have.property('albumSize');\n        done()\n    })",
              "err": {},
              "uuid": "8b88ef6b-b856-4482-a331-a06facc92381",
              "parentUUID": "5e49dd6e-4161-4c7a-83d2-f392143f7d62",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8b88ef6b-b856-4482-a331-a06facc92381"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 28,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d8229314-d122-422f-a748-ee6e8f814323",
          "title": "GET /album/:id/:pagenum/:pagesize",
          "fullFile": "E:\\CodePlace\\university_of_auckland\\compsci_732\\workspace\\group_project\\project-group-azure-aardvarks\\MusicPlus\\server\\test\\unit\\api\\singer.js",
          "file": "\\test\\unit\\api\\singer.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "success",
              "fullTitle": "GET /album/:id/:pagenum/:pagesize success",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const id = 6452\nconst pagenum = 1\nconst pagesize = 10\nchai.request(url)\n    .get(`/api/singer/album/${id}/${pagenum}/${pagesize}`)\n    .end(function(err, res) {\n        if(err){\n            console.log(err)\n            done();\n        }\n        expect(res.status).to.equal(200);\n        expect(res.body).to.have.deep.property('code', 200);\n        expect(res.body).to.have.deep.property('status', 1);\n        expect(res.body.data).to.be.an('array');\n        res.body.data.forEach(item => {\n            expect(item).to.have.property('id');\n            expect(item).to.have.property('name');\n            expect(item).to.have.property('picUrl');\n            expect(item).to.have.property('artist');\n            expect(item).to.have.property('size');\n        })\n        done()\n    })",
              "err": {},
              "uuid": "4d745b4c-6230-46d0-8f2f-cf52835d777a",
              "parentUUID": "d8229314-d122-422f-a748-ee6e8f814323",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4d745b4c-6230-46d0-8f2f-cf52835d777a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "18245413-c377-4f0e-b2de-610a990b8733",
          "title": "GET /songs/:id/:pagenum/:pagesize",
          "fullFile": "E:\\CodePlace\\university_of_auckland\\compsci_732\\workspace\\group_project\\project-group-azure-aardvarks\\MusicPlus\\server\\test\\unit\\api\\singer.js",
          "file": "\\test\\unit\\api\\singer.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "success",
              "fullTitle": "GET /songs/:id/:pagenum/:pagesize success",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const id = 6452\nconst pagenum = 1\nconst pagesize = 10\nchai.request(url)\n    .get(`/api/singer/songs/${id}/${pagenum}/${pagesize}`)\n    .end(function(err, res) {\n        if (err){\n            console.log(err)\n            done()\n        }\n        expect(res.status).to.equal(200);\n        expect(res.body).to.have.deep.property('code', 200);\n        expect(res.body).to.have.deep.property('status', 1);\n        expect(res.body.data).to.be.an('array');\n        res.body.data.forEach(item => {\n            expect(item).to.have.property('id');\n            expect(item).to.have.property('name');\n            expect(item).to.have.property('album');\n            expect(item).to.have.property('artists');\n        })\n        done();\n    })",
              "err": {},
              "uuid": "b99fa6ae-565e-484e-bb80-967d4ce82416",
              "parentUUID": "18245413-c377-4f0e-b2de-610a990b8733",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b99fa6ae-565e-484e-bb80-967d4ce82416"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7ec1ea37-b9c4-4943-b116-12578a63f997",
          "title": "getStyleSongs function",
          "fullFile": "E:\\CodePlace\\university_of_auckland\\compsci_732\\workspace\\group_project\\project-group-azure-aardvarks\\MusicPlus\\server\\test\\unit\\api\\style.js",
          "file": "\\test\\unit\\api\\style.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "success",
              "fullTitle": "getStyleSongs function success",
              "timedOut": false,
              "duration": 24,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await getStyleSongs(1010)",
              "err": {},
              "uuid": "bd39c83f-b9ec-48b2-9f82-8b85d62694d6",
              "parentUUID": "7ec1ea37-b9c4-4943-b116-12578a63f997",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bd39c83f-b9ec-48b2-9f82-8b85d62694d6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 24,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e5e06a6c-fb7d-4c81-9a91-9742839e8b78",
          "title": "GET /api/style/allStyle",
          "fullFile": "E:\\CodePlace\\university_of_auckland\\compsci_732\\workspace\\group_project\\project-group-azure-aardvarks\\MusicPlus\\server\\test\\unit\\api\\style.js",
          "file": "\\test\\unit\\api\\style.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "success",
              "fullTitle": "GET /api/style/allStyle success",
              "timedOut": false,
              "duration": 26,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/api/style/allStyle')\n    .end(function(err, res) {\n        if (err) {\n            console.log(err)\n        }\n        expect(res.status).to.equal(200);\n        expect(res.body).to.have.deep.property('code', 200);\n        expect(res.body).to.have.deep.property('status', 1);\n        expect(res.body.data).to.be.an('array');\n        res.body.data.forEach(item => {\n            expect(item).to.have.property('name');\n            expect(item).to.have.property('id');\n            expect(item).to.have.property('enName');\n            item.childStyle.forEach(child => {\n                expect(child).to.have.property('name');\n                expect(child).to.have.property('id');\n                expect(child).to.have.property('enName');\n                expect(child).to.have.property('picUrl');\n            })\n        });\n        done();\n    });",
              "err": {},
              "uuid": "29b11fb5-6def-443f-9432-f13be13ffaff",
              "parentUUID": "e5e06a6c-fb7d-4c81-9a91-9742839e8b78",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "29b11fb5-6def-443f-9432-f13be13ffaff"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 26,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "acf45400-4ecc-4f6d-8410-b33badd6f766",
          "title": "GET /api/style/songs/:id",
          "fullFile": "E:\\CodePlace\\university_of_auckland\\compsci_732\\workspace\\group_project\\project-group-azure-aardvarks\\MusicPlus\\server\\test\\unit\\api\\style.js",
          "file": "\\test\\unit\\api\\style.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "success",
              "fullTitle": "GET /api/style/songs/:id success",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/api/style/songs/1010')\n    .end(function(err, res) {\n        if (err){\n            console.log(err)\n            done();\n        }\n        expect(res.status).to.equal(200);\n        expect(res.body).to.have.deep.property('code', 200);\n        expect(res.body).to.have.deep.property('status', 1);\n        expect(res.body.data).to.be.an('array');\n        done();\n    })",
              "err": {},
              "uuid": "8a1411da-7b80-47e7-8632-52d5bfb83b7d",
              "parentUUID": "acf45400-4ecc-4f6d-8410-b33badd6f766",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8a1411da-7b80-47e7-8632-52d5bfb83b7d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9da2c2f5-c80f-4550-b6ed-01f89b512546",
          "title": "GET /api/style/preference",
          "fullFile": "E:\\CodePlace\\university_of_auckland\\compsci_732\\workspace\\group_project\\project-group-azure-aardvarks\\MusicPlus\\server\\test\\unit\\api\\style.js",
          "file": "\\test\\unit\\api\\style.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "success",
              "fullTitle": "GET /api/style/preference success",
              "timedOut": false,
              "duration": 20,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/api/style/preference')\n    .auth(fakeUser.username, fakeUser.password, {type: 'basic'})\n    .end(function(err, res) {\n        if (err){\n            console.log(err)\n            done();\n        }\n        expect(res.status).to.equal(200);\n        expect(res.body).to.have.deep.property('code', 200);\n        expect(res.body).to.have.deep.property('status', 1);\n        expect(res.body.data).to.have.property('_id');\n        expect(res.body.data).to.have.property('name');\n        expect(res.body.data).to.have.property('private');\n        expect(res.body.data.songs).to.be.an('array');\n        expect(res.body.data).to.have.property('createAt');\n        expect(res.body.data).to.have.property('updatedAt');\n        expect(res.body.data.owner).to.have.property('_id');\n        expect(res.body.data.owner).to.have.property('username');\n        expect(res.body.data.owner).to.have.property('email');\n        expect(res.body.data.owner).to.have.property('favoriteMusic');\n        expect(res.body.data.owner.favoritePlayList).to.be.an('array');\n        expect(res.body.data.owner.musicGenre).to.be.an('array');\n        done();\n    });",
              "err": {},
              "uuid": "7e239b0c-7773-4cb2-9e46-0ced6e3cdea3",
              "parentUUID": "9da2c2f5-c80f-4550-b6ed-01f89b512546",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7e239b0c-7773-4cb2-9e46-0ced6e3cdea3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 20,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2d87b9ea-517e-4bca-8d3a-cc9ff04cc33d",
          "title": "POST /api/style/setPreference/:id",
          "fullFile": "E:\\CodePlace\\university_of_auckland\\compsci_732\\workspace\\group_project\\project-group-azure-aardvarks\\MusicPlus\\server\\test\\unit\\api\\style.js",
          "file": "\\test\\unit\\api\\style.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "success",
              "fullTitle": "POST /api/style/setPreference/:id success",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .post('/api/style/setPreference/1108')\n    .auth(fakeUser.username, fakeUser.password, {type: 'basic'})\n    .end(function(err, res) {\n        if(err){\n            console.log(err)\n            done();\n        }\n        expect(res.status).to.equal(200);\n        expect(res.body).to.have.deep.property('code', 200);\n        expect(res.body).to.have.deep.property('status', 1);\n        expect(res.body.data).to.have.property('_id');\n        expect(res.body.data).to.have.deep.property('username', user.data.data.username);\n        expect(res.body.data).to.have.deep.property('password', user.data.data.password);\n        expect(res.body.data).to.have.deep.property('email', user.data.data.email);\n        expect(res.body.data).to.have.deep.property('lastName',user.data.data.lastName);\n        expect(res.body.data).to.have.deep.property('firstName',user.data.data.firstName);\n        expect(res.body.data.favoritePlayList).to.be.an('array');\n        expect(res.body.data).property('favoriteMusic');\n        expect(res.body.data).property('createdAt');\n        expect(res.body.data).property('updatedAt');\n        expect(res.body.data).to.have.property('address');\n        expect(res.body.data).to.have.property('musicGenre');\n        done();\n    })",
              "err": {},
              "uuid": "bdbf7a21-cfd0-410a-9d2e-06ad4d42d62b",
              "parentUUID": "2d87b9ea-517e-4bca-8d3a-cc9ff04cc33d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bdbf7a21-cfd0-410a-9d2e-06ad4d42d62b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "490e58dc-ad5a-406b-9b07-3c1cc0a5977f",
          "title": "POST /api/user/newUser",
          "fullFile": "E:\\CodePlace\\university_of_auckland\\compsci_732\\workspace\\group_project\\project-group-azure-aardvarks\\MusicPlus\\server\\test\\unit\\api\\user.js",
          "file": "\\test\\unit\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create user in User table",
              "fullTitle": "POST /api/user/newUser Create user in User table",
              "timedOut": false,
              "duration": 5,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .post('/api/user/newUser')\n    .send(fakeUser)\n    .end(function(err, res) {\n        expect(res.status).to.equal(201);\n        expect(res.body).to.have.property('code', 200);\n        expect(res.body).to.have.property('status', 1);\n        expect(res.body.data).to.have.property('_id');\n        expect(res.body.data).to.have.deep.property('username', 'testuser');\n        expect(res.body.data).to.have.deep.property('email', 'testemail@example.com');\n        expect(res.body.data).to.have.property('password');\n        expect(res.body.data).to.have.property('favoritePlayList');\n        expect(res.body.data).to.have.property('musicGenre');\n        expect(res.body.data).to.have.property('favoriteMusic');\n        expect(res.body.data).to.have.property('createdAt');\n        expect(res.body.data).to.have.property('updatedAt');\n        done();\n    });",
              "err": {
                "message": "AssertionError: expected { Error: 'Username unavailable!' } to have property '_id'",
                "estack": "AssertionError: expected { Error: 'Username unavailable!' } to have property '_id'\n    at file:///E:/CodePlace/university_of_auckland/compsci_732/workspace/group_project/project-group-azure-aardvarks/MusicPlus/server/test/unit/api/user.js:37:47\n    at Test.Request.callback (node_modules\\chai-http\\node_modules\\superagent\\lib\\node\\index.js:716:12)\n    at E:\\CodePlace\\university_of_auckland\\compsci_732\\workspace\\group_project\\project-group-azure-aardvarks\\MusicPlus\\server\\node_modules\\chai-http\\node_modules\\superagent\\lib\\node\\index.js:916:18\n    at IncomingMessage.<anonymous> (node_modules\\chai-http\\node_modules\\superagent\\lib\\node\\parsers\\json.js:19:7)\n    at IncomingMessage.emit (node:events:525:35)\n    at endReadableNT (node:internal/streams/readable:1359:12)\n    at processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "c8b13f44-d032-4b8f-a46b-704b246803be",
              "parentUUID": "490e58dc-ad5a-406b-9b07-3c1cc0a5977f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Exist user in User Table",
              "fullTitle": "POST /api/user/newUser Exist user in User Table",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request('http://127.0.0.1:3000')\n    .post('/api/user/newUser')\n    .send(fakeUser)\n    .end(function(err, res) {\n        expect(res.body).to.have.property('code', 200);\n        expect(res.body).to.have.property('status', 1);\n        expect(res.body.data).to.have.deep.property('Error', 'Username unavailable!');\n        done();\n    });",
              "err": {},
              "uuid": "30c8ad44-5aff-48a9-88b9-b107fc4fe570",
              "parentUUID": "490e58dc-ad5a-406b-9b07-3c1cc0a5977f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "30c8ad44-5aff-48a9-88b9-b107fc4fe570"
          ],
          "failures": [
            "c8b13f44-d032-4b8f-a46b-704b246803be"
          ],
          "pending": [],
          "skipped": [],
          "duration": 8,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "aede04e4-5a3f-4843-8e68-f642ae4da15c",
          "title": "GET /api/user/logIn",
          "fullFile": "E:\\CodePlace\\university_of_auckland\\compsci_732\\workspace\\group_project\\project-group-azure-aardvarks\\MusicPlus\\server\\test\\unit\\api\\user.js",
          "file": "\\test\\unit\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "success",
              "fullTitle": "GET /api/user/logIn success",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/api/user/logIn')\n    .auth(fakeUser.username, fakeUser.password, {type:\"basic\"})\n    .end(function (err, res){\n        if (err){\n            console.log(err)\n            done();\n        }\n        // expect(res.status).to.equal(200)\n        expect(res.body).to.have.property('code', 200);\n        expect(res.body).to.have.property('status', 1);\n        expect(res.body.data).to.have.property('_id');\n        expect(res.body.data).to.have.property('favoritePlayList');\n        expect(res.body.data).to.have.property('musicGenre');\n        expect(res.body.data).to.have.property('favoriteMusic');\n        expect(res.body.data).to.have.property('createdAt');\n        expect(res.body.data).to.have.property('updatedAt');\n        expect(res.body.data).to.have.deep.property(\"username\", fakeUser.username);\n        expect(res.body.data).to.have.deep.property('password', fakeUser.password);\n        expect(res.body.data).to.have.deep.property('email', fakeUser.email);\n        // console.log(res)\n        done();\n    })",
              "err": {},
              "uuid": "20c86d0c-746a-4571-9176-acf5414d7f3c",
              "parentUUID": "aede04e4-5a3f-4843-8e68-f642ae4da15c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "fail",
              "fullTitle": "GET /api/user/logIn fail",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/api/user/logIn')\n    .auth(\"123\", fakeUser.password, {type:\"basic\"})\n    .end(function (err, res){\n        if (err){\n            console.log(err);\n            done();\n        }\n        expect(res.status).to.equal(401);\n        done();\n    })",
              "err": {},
              "uuid": "3772d187-83e6-4f4a-bedc-e0fbb2c6c329",
              "parentUUID": "aede04e4-5a3f-4843-8e68-f642ae4da15c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "20c86d0c-746a-4571-9176-acf5414d7f3c",
            "3772d187-83e6-4f4a-bedc-e0fbb2c6c329"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ff68f5df-1791-47a3-8161-ebc6d6d5aaec",
          "title": "PUT /api/user/updateUserInfo",
          "fullFile": "E:\\CodePlace\\university_of_auckland\\compsci_732\\workspace\\group_project\\project-group-azure-aardvarks\\MusicPlus\\server\\test\\unit\\api\\user.js",
          "file": "\\test\\unit\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "success",
              "fullTitle": "PUT /api/user/updateUserInfo success",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .put('/api/user/updateUserInfo')\n    .send(updateInformation)\n    .auth(fakeUser.username, fakeUser.password,{type:\"basic\"})\n    .end(function (err, res){\n        if (err){\n            console.log(err);\n            done();\n        }\n        expect(res.status).to.equal(200);\n        console.log(res.body)\n        expect(res.body).to.have.property('code', 200);\n        expect(res.body).to.have.property('status', 1);\n        expect(res.body.data).to.have.property('_id');\n        expect(res.body.data).to.have.deep.property(\"username\", updateInformation.username);\n        expect(res.body.data).to.have.deep.property('password', updateInformation.password);\n        expect(res.body.data).to.have.deep.property('email', updateInformation.email);\n        expect(res.body.data).to.have.deep.property('firstName', updateInformation.firstName);\n        expect(res.body.data).to.have.deep.property('lastName', updateInformation.lastName);\n        expect(res.body.data).to.have.property('dateOfBirth',);\n        expect(res.body.data).to.have.deep.property('musicGenre');\n        expect(res.body.data).to.have.deep.property('favoritePlayList', updateInformation.favorite_Playlist);\n        expect(res.body.data).to.have.deep.property('address', updateInformation.address);\n        expect(res.body.data).to.have.property('createdAt');\n        expect(res.body.data).to.have.property('updatedAt');\n        done();\n    })",
              "err": {},
              "uuid": "b525f914-752e-4f90-865c-0825b58be957",
              "parentUUID": "ff68f5df-1791-47a3-8161-ebc6d6d5aaec",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b525f914-752e-4f90-865c-0825b58be957"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8d98d930-3139-4f5e-8b5f-7b9c5f9271e8",
          "title": "GET /api/user/validUsername/:username",
          "fullFile": "E:\\CodePlace\\university_of_auckland\\compsci_732\\workspace\\group_project\\project-group-azure-aardvarks\\MusicPlus\\server\\test\\unit\\api\\user.js",
          "file": "\\test\\unit\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "success",
              "fullTitle": "GET /api/user/validUsername/:username success",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/api/user/validUsername/'+'empty')\n    .end(function (err, res){\n        if (err){\n            console.log(err);\n            done();\n        }\n        expect(res.body).to.have.deep.property('code', 200);\n        expect(res.body).to.have.deep.property('status', 1);\n        expect(res.body).to.have.deep.property('data', true);\n        done();\n    })",
              "err": {},
              "uuid": "3a8a7d5d-4356-4d02-bd19-591684ade777",
              "parentUUID": "8d98d930-3139-4f5e-8b5f-7b9c5f9271e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "fail",
              "fullTitle": "GET /api/user/validUsername/:username fail",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/api/user/validUsername/'+ fakeUser.username)\n    .end(function (err, res){\n        if (err){\n            console.log(err);\n            done();\n        }\n        expect(res.body).to.have.deep.property('code', 200);\n        expect(res.body).to.have.deep.property('status', 1);\n        expect(res.body).to.have.deep.property('data', false);\n        done();\n    })",
              "err": {},
              "uuid": "5e5cd726-79eb-49a2-a362-8247b31bf236",
              "parentUUID": "8d98d930-3139-4f5e-8b5f-7b9c5f9271e8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3a8a7d5d-4356-4d02-bd19-591684ade777",
            "5e5cd726-79eb-49a2-a362-8247b31bf236"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "404eb613-2859-4952-8498-e9528089f3dc",
          "title": "PUT /api/user/changePassword",
          "fullFile": "E:\\CodePlace\\university_of_auckland\\compsci_732\\workspace\\group_project\\project-group-azure-aardvarks\\MusicPlus\\server\\test\\unit\\api\\user.js",
          "file": "\\test\\unit\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "success",
              "fullTitle": "PUT /api/user/changePassword success",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newPassword = {\n    _id: user.data.data._id,\n    oldPassword: user.data.data.password,\n    newPassword: \"testpassword\"\n}\nchai.request(url)\n    .put('/api/user/changePassword')\n    .send(newPassword)\n    .auth(fakeUser.username, newPassword.oldPassword,{type:\"basic\"})\n    .end( function (err, res){\n        if (err){\n            console.log(err);\n            done();\n        }\n        expect(res.status).to.equal(200);\n        expect(res.body).to.have.deep.property('code', 200);\n        expect(res.body).to.have.deep.property('status', 1);\n        expect(res.body.data).to.have.deep.property('_id', newPassword._id);\n        expect(res.body.data).to.have.deep.property('username', fakeUser.username);\n        expect(res.body.data).to.have.deep.property('password', newPassword.newPassword);\n        expect(res.body.data).to.have.deep.property('email', user.data.data.email);\n        expect(res.body.data).to.have.deep.property('firstName', user.data.data.firstName);\n        expect(res.body.data).to.have.deep.property('lastName', user.data.data.lastName);\n        expect(res.body.data).to.have.deep.property('dateOfBirth', user.data.data.dateOfBirth);\n        expect(res.body.data).to.have.property('musicGenre');\n        expect(res.body.data).to.have.property('favoritePlayList');\n        expect(res.body.data).to.have.property('favoriteMusic');\n        expect(res.body.data).to.have.property('createdAt');\n        expect(res.body.data).to.have.property('updatedAt');\n        expect(res.body.data).to.have.property('address');\n        done();\n    })",
              "err": {},
              "uuid": "d2757b44-9724-4e2c-95c8-a5adf7b2737a",
              "parentUUID": "404eb613-2859-4952-8498-e9528089f3dc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d2757b44-9724-4e2c-95c8-a5adf7b2737a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "49cf0634-1b03-4e1f-9bbf-76ce7852d478",
          "title": "Return Message",
          "fullFile": "E:\\CodePlace\\university_of_auckland\\compsci_732\\workspace\\group_project\\project-group-azure-aardvarks\\MusicPlus\\server\\test\\unit\\utils\\commonUtils.js",
          "file": "\\test\\unit\\utils\\commonUtils.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should contain message",
              "fullTitle": "Return Message Should contain message",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.equal(JSON.stringify(returnMsg(1,200,\"Success\")), JSON.stringify({\n    \"status\": 1,\n    \"code\": 200,\n    \"data\": \"Success\"\n}));",
              "err": {},
              "uuid": "834a6e7c-a283-4a9a-ae03-2d4c644af829",
              "parentUUID": "49cf0634-1b03-4e1f-9bbf-76ce7852d478",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "834a6e7c-a283-4a9a-ae03-2d4c644af829"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f6662c47-dec4-45dc-b3d7-0f14856cf210",
          "title": "Date Format",
          "fullFile": "E:\\CodePlace\\university_of_auckland\\compsci_732\\workspace\\group_project\\project-group-azure-aardvarks\\MusicPlus\\server\\test\\unit\\utils\\commonUtils.js",
          "file": "\\test\\unit\\utils\\commonUtils.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should contain message",
              "fullTitle": "Date Format Should contain message",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.equal(\n    formatDateTime(new Date()),\n    formatDateTime(new Date())\n);",
              "err": {},
              "uuid": "57df83bf-52d0-4939-96ad-516feeff5601",
              "parentUUID": "f6662c47-dec4-45dc-b3d7-0f14856cf210",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "57df83bf-52d0-4939-96ad-516feeff5601"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5ad61882-a487-430d-b1f0-e7dca21c34be",
          "title": "Paginator",
          "fullFile": "E:\\CodePlace\\university_of_auckland\\compsci_732\\workspace\\group_project\\project-group-azure-aardvarks\\MusicPlus\\server\\test\\unit\\utils\\commonUtils.js",
          "file": "\\test\\unit\\utils\\commonUtils.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Return the first page with page size 2",
              "fullTitle": "Paginator Return the first page with page size 2",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.equal(\n    JSON.stringify(Paginator(2,1,[1,2,3,4,5])),\n    JSON.stringify({\"pageSize\":2,\"currentPage\":1,\"length\":5,\"data\":[1,2]})\n);",
              "err": {},
              "uuid": "db165991-40ac-45a2-a19c-81815e06c761",
              "parentUUID": "5ad61882-a487-430d-b1f0-e7dca21c34be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Return the second page with page size 2",
              "fullTitle": "Paginator Return the second page with page size 2",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.equal(\n    JSON.stringify(Paginator(2,2,[1,2,3,4,5])),\n    JSON.stringify({\"pageSize\":2,\"currentPage\":2,\"length\":5,\"data\":[3,4]})\n);",
              "err": {},
              "uuid": "7de436b5-0e73-4259-a958-b0e4e84b0792",
              "parentUUID": "5ad61882-a487-430d-b1f0-e7dca21c34be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Return the third page with page size 2",
              "fullTitle": "Paginator Return the third page with page size 2",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.equal(\n    JSON.stringify(Paginator(2,3,[1,2,3,4,5])),\n    JSON.stringify({\"pageSize\":2,\"currentPage\":3,\"length\":5,\"data\":[5]})\n);",
              "err": {},
              "uuid": "264da2c6-b04b-4482-b263-659a305b02e3",
              "parentUUID": "5ad61882-a487-430d-b1f0-e7dca21c34be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Return the fourth page with page size 2",
              "fullTitle": "Paginator Return the fourth page with page size 2",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.equal(\n    JSON.stringify(Paginator(2,4,[1,2,3,4,5])),\n    JSON.stringify({\"pageSize\":2,\"currentPage\":4,\"length\":5,\"data\":[]})\n);",
              "err": {},
              "uuid": "48b482eb-e327-46ca-8d0b-bdbb51e4a628",
              "parentUUID": "5ad61882-a487-430d-b1f0-e7dca21c34be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Callback: reverse value",
              "fullTitle": "Paginator Callback: reverse value",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.equal(\n    JSON.stringify(Paginator(2,1,[1,2,3,4,5], (x)=>{x.reverse()})),\n    JSON.stringify({\"pageSize\":2,\"currentPage\":1,\"length\":5,\"data\":[2,1]})\n);",
              "err": {},
              "uuid": "d5cabe77-edbe-459f-bc48-9ed93ea17e08",
              "parentUUID": "5ad61882-a487-430d-b1f0-e7dca21c34be",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "db165991-40ac-45a2-a19c-81815e06c761",
            "7de436b5-0e73-4259-a958-b0e4e84b0792",
            "264da2c6-b04b-4482-b263-659a305b02e3",
            "48b482eb-e327-46ca-8d0b-bdbb51e4a628",
            "d5cabe77-edbe-459f-bc48-9ed93ea17e08"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "377a7706-1bd3-43e5-be2e-38bed2d02cf2",
          "title": "Paginator Async",
          "fullFile": "E:\\CodePlace\\university_of_auckland\\compsci_732\\workspace\\group_project\\project-group-azure-aardvarks\\MusicPlus\\server\\test\\unit\\utils\\commonUtils.js",
          "file": "\\test\\unit\\utils\\commonUtils.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Return the first page with page size 2",
              "fullTitle": "Paginator Async Return the first page with page size 2",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.equal(\n    JSON.stringify(await PaginatorAsync(2,1,[1,2,3,4,5])),\n    JSON.stringify({\"pageSize\":2,\"currentPage\":1,\"length\":5,\"data\":[1,2]})\n);",
              "err": {},
              "uuid": "28067ddc-f444-4054-a7f7-b5bc48907549",
              "parentUUID": "377a7706-1bd3-43e5-be2e-38bed2d02cf2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Return the second page with page size 2",
              "fullTitle": "Paginator Async Return the second page with page size 2",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.equal(\n    JSON.stringify(await PaginatorAsync(2,2,[1,2,3,4,5])),\n    JSON.stringify({\"pageSize\":2,\"currentPage\":2,\"length\":5,\"data\":[3,4]})\n);",
              "err": {},
              "uuid": "de1f3986-1e6d-4262-9c88-132268d5665e",
              "parentUUID": "377a7706-1bd3-43e5-be2e-38bed2d02cf2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Return the third page with page size 2",
              "fullTitle": "Paginator Async Return the third page with page size 2",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.equal(\n    JSON.stringify(await PaginatorAsync(2,3,[1,2,3,4,5])),\n    JSON.stringify({\"pageSize\":2,\"currentPage\":3,\"length\":5,\"data\":[5]})\n);",
              "err": {},
              "uuid": "60f2be1c-464e-4072-9b72-affd21ff4d34",
              "parentUUID": "377a7706-1bd3-43e5-be2e-38bed2d02cf2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Return the fourth page with page size 2",
              "fullTitle": "Paginator Async Return the fourth page with page size 2",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.equal(\n    JSON.stringify(await PaginatorAsync(2,4,[1,2,3,4,5])),\n    JSON.stringify({\"pageSize\":2,\"currentPage\":4,\"length\":5,\"data\":[]})\n);",
              "err": {},
              "uuid": "e64ace8e-a44e-47f7-9614-2dbd6b5634ce",
              "parentUUID": "377a7706-1bd3-43e5-be2e-38bed2d02cf2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Callback: reverse value",
              "fullTitle": "Paginator Async Callback: reverse value",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.equal(\n    JSON.stringify(await PaginatorAsync(2,1,[1,2,3,4,5], (x)=>{x.reverse()})),\n    JSON.stringify({\"pageSize\":2,\"currentPage\":1,\"length\":5,\"data\":[2,1]})\n);",
              "err": {},
              "uuid": "bf0e42e0-e69f-48f9-be61-8729052e5f52",
              "parentUUID": "377a7706-1bd3-43e5-be2e-38bed2d02cf2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "28067ddc-f444-4054-a7f7-b5bc48907549",
            "de1f3986-1e6d-4262-9c88-132268d5665e",
            "60f2be1c-464e-4072-9b72-affd21ff4d34",
            "e64ace8e-a44e-47f7-9614-2dbd6b5634ce",
            "bf0e42e0-e69f-48f9-be61-8729052e5f52"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a6c9e707-1a4e-4edb-bdb1-4520f09ca0d4",
          "title": "Available song check",
          "fullFile": "E:\\CodePlace\\university_of_auckland\\compsci_732\\workspace\\group_project\\project-group-azure-aardvarks\\MusicPlus\\server\\test\\unit\\utils\\validSongAvailable.js",
          "file": "\\test\\unit\\utils\\validSongAvailable.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "invalid song",
              "fullTitle": "Available song check invalid song",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.equal(\n    await vaildSongAvailable(6731),\n    \"Song ID Error!\"\n);",
              "err": {},
              "uuid": "952381f7-6bf7-47b6-bfcc-6a186db4d89e",
              "parentUUID": "a6c9e707-1a4e-4edb-bdb1-4520f09ca0d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "valid song",
              "fullTitle": "Available song check valid song",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.equal(\n    await vaildSongAvailable(33894312),\n    true\n);",
              "err": {},
              "uuid": "6a0980bc-7037-43df-a1aa-1ce0aa8da23a",
              "parentUUID": "a6c9e707-1a4e-4edb-bdb1-4520f09ca0d4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "952381f7-6bf7-47b6-bfcc-6a186db4d89e",
            "6a0980bc-7037-43df-a1aa-1ce0aa8da23a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}